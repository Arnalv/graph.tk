#ifdef GL_ES
precision highp float;
#endif
/*
uniform vec4 uColor;
void main(void) {
	gl_FragColor = uColor;
}
*/

varying vec2  MCposition;
varying float diffuse;
varying float specular;
uniform vec4 uColor;
const float ambient = 0.0;
float rand(vec2 co){
    return fract(sin(dot(co.xy ,vec2(12.9898,78.233))) * 43758.5453);
}

void main(void) {
	if(MCposition.x*MCposition.x+MCposition.y*MCposition.y<1.0){
		discard;
	}
	vec2 pos = fract(MCposition);
	if ((pos.x > 0.50)&&(pos.y > 0.5) || (pos.x < 0.5)&&(pos.y < 0.5)){
		float lightWeighting = (0.2*diffuse+0.8*specular+ambient);
		gl_FragColor = vec4(lightWeighting*uColor.rgb, uColor.a);
	}else{
		vec3 othercolor = vec3(1,1,1)-uColor.rgb;
		othercolor=othercolor*0.1+uColor.rgb*0.9;
		
		float lightWeighting = (1.0-0.1*rand(MCposition))*(0.7*diffuse+0.3*specular+ambient);
		gl_FragColor = vec4(lightWeighting*othercolor.rgb, uColor.a);
		
	}
}
